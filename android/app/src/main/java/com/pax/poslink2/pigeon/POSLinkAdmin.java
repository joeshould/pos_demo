// Autogenerated from Pigeon (v12.0.1), do not edit directly.
// See also: https://pub.dev/packages/pigeon

package com.pax.poslink2.pigeon;

import android.util.Log;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import io.flutter.plugin.common.BasicMessageChannel;
import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MessageCodec;
import io.flutter.plugin.common.StandardMessageCodec;
import java.io.ByteArrayOutputStream;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/** Generated class from Pigeon. */
@SuppressWarnings({"unused", "unchecked", "CodeBlock2Expr", "RedundantSuppression", "serial"})
public class POSLinkAdmin {

  /** Error class for passing custom error details to Flutter via a thrown PlatformException. */
  public static class FlutterError extends RuntimeException {

    /** The error code. */
    public final String code;

    /** The error details. Must be a datatype supported by the api codec. */
    public final Object details;

    public FlutterError(@NonNull String code, @Nullable String message, @Nullable Object details) 
    {
      super(message);
      this.code = code;
      this.details = details;
    }
  }

  @NonNull
  protected static ArrayList<Object> wrapError(@NonNull Throwable exception) {
    ArrayList<Object> errorList = new ArrayList<Object>(3);
    if (exception instanceof FlutterError) {
      FlutterError error = (FlutterError) exception;
      errorList.add(error.code);
      errorList.add(error.getMessage());
      errorList.add(error.details);
    } else {
      errorList.add(exception.toString());
      errorList.add(exception.getClass().getSimpleName());
      errorList.add(
        "Cause: " + exception.getCause() + ", Stacktrace: " + Log.getStackTraceString(exception));
    }
    return errorList;
  }

  /** Generated class from Pigeon that represents data sent in messages. */
  public static final class AdminSConfigurationInfo {
    private @Nullable String name;

    public @Nullable String getName() {
      return name;
    }

    public void setName(@Nullable String setterArg) {
      this.name = setterArg;
    }

    private @Nullable String value;

    public @Nullable String getValue() {
      return value;
    }

    public void setValue(@Nullable String setterArg) {
      this.value = setterArg;
    }

    public static final class Builder {

      private @Nullable String name;

      public @NonNull Builder setName(@Nullable String setterArg) {
        this.name = setterArg;
        return this;
      }

      private @Nullable String value;

      public @NonNull Builder setValue(@Nullable String setterArg) {
        this.value = setterArg;
        return this;
      }

      public @NonNull AdminSConfigurationInfo build() {
        AdminSConfigurationInfo pigeonReturn = new AdminSConfigurationInfo();
        pigeonReturn.setName(name);
        pigeonReturn.setValue(value);
        return pigeonReturn;
      }
    }

    @NonNull
    ArrayList<Object> toList() {
      ArrayList<Object> toListResult = new ArrayList<Object>(2);
      toListResult.add(name);
      toListResult.add(value);
      return toListResult;
    }

    static @NonNull AdminSConfigurationInfo fromList(@NonNull ArrayList<Object> list) {
      AdminSConfigurationInfo pigeonResult = new AdminSConfigurationInfo();
      Object name = list.get(0);
      pigeonResult.setName((String) name);
      Object value = list.get(1);
      pigeonResult.setValue((String) value);
      return pigeonResult;
    }
  }

  /** Generated class from Pigeon that represents data sent in messages. */
  public static final class AdminSetConfigurationReq {
    private @Nullable List<AdminSConfigurationInfo> configurations;

    public @Nullable List<AdminSConfigurationInfo> getConfigurations() {
      return configurations;
    }

    public void setConfigurations(@Nullable List<AdminSConfigurationInfo> setterArg) {
      this.configurations = setterArg;
    }

    public static final class Builder {

      private @Nullable List<AdminSConfigurationInfo> configurations;

      public @NonNull Builder setConfigurations(@Nullable List<AdminSConfigurationInfo> setterArg) {
        this.configurations = setterArg;
        return this;
      }

      public @NonNull AdminSetConfigurationReq build() {
        AdminSetConfigurationReq pigeonReturn = new AdminSetConfigurationReq();
        pigeonReturn.setConfigurations(configurations);
        return pigeonReturn;
      }
    }

    @NonNull
    ArrayList<Object> toList() {
      ArrayList<Object> toListResult = new ArrayList<Object>(1);
      toListResult.add(configurations);
      return toListResult;
    }

    static @NonNull AdminSetConfigurationReq fromList(@NonNull ArrayList<Object> list) {
      AdminSetConfigurationReq pigeonResult = new AdminSetConfigurationReq();
      Object configurations = list.get(0);
      pigeonResult.setConfigurations((List<AdminSConfigurationInfo>) configurations);
      return pigeonResult;
    }
  }

  /** Generated class from Pigeon that represents data sent in messages. */
  public static final class AdminGetConfigurationReq {
    private @Nullable List<String> names;

    public @Nullable List<String> getNames() {
      return names;
    }

    public void setNames(@Nullable List<String> setterArg) {
      this.names = setterArg;
    }

    public static final class Builder {

      private @Nullable List<String> names;

      public @NonNull Builder setNames(@Nullable List<String> setterArg) {
        this.names = setterArg;
        return this;
      }

      public @NonNull AdminGetConfigurationReq build() {
        AdminGetConfigurationReq pigeonReturn = new AdminGetConfigurationReq();
        pigeonReturn.setNames(names);
        return pigeonReturn;
      }
    }

    @NonNull
    ArrayList<Object> toList() {
      ArrayList<Object> toListResult = new ArrayList<Object>(1);
      toListResult.add(names);
      return toListResult;
    }

    static @NonNull AdminGetConfigurationReq fromList(@NonNull ArrayList<Object> list) {
      AdminGetConfigurationReq pigeonResult = new AdminGetConfigurationReq();
      Object names = list.get(0);
      pigeonResult.setNames((List<String>) names);
      return pigeonResult;
    }
  }

  /** Generated class from Pigeon that represents data sent in messages. */
  public static final class AdminResetReq {
    private @Nullable String classID;

    public @Nullable String getClassID() {
      return classID;
    }

    public void setClassID(@Nullable String setterArg) {
      this.classID = setterArg;
    }

    public static final class Builder {

      private @Nullable String classID;

      public @NonNull Builder setClassID(@Nullable String setterArg) {
        this.classID = setterArg;
        return this;
      }

      public @NonNull AdminResetReq build() {
        AdminResetReq pigeonReturn = new AdminResetReq();
        pigeonReturn.setClassID(classID);
        return pigeonReturn;
      }
    }

    @NonNull
    ArrayList<Object> toList() {
      ArrayList<Object> toListResult = new ArrayList<Object>(1);
      toListResult.add(classID);
      return toListResult;
    }

    static @NonNull AdminResetReq fromList(@NonNull ArrayList<Object> list) {
      AdminResetReq pigeonResult = new AdminResetReq();
      Object classID = list.get(0);
      pigeonResult.setClassID((String) classID);
      return pigeonResult;
    }
  }

  /** Generated class from Pigeon that represents data sent in messages. */
  public static final class AdminPingReq {
    private @Nullable String targetName;

    public @Nullable String getTargetName() {
      return targetName;
    }

    public void setTargetName(@Nullable String setterArg) {
      this.targetName = setterArg;
    }

    private @Nullable String timeout;

    public @Nullable String getTimeout() {
      return timeout;
    }

    public void setTimeout(@Nullable String setterArg) {
      this.timeout = setterArg;
    }

    public static final class Builder {

      private @Nullable String targetName;

      public @NonNull Builder setTargetName(@Nullable String setterArg) {
        this.targetName = setterArg;
        return this;
      }

      private @Nullable String timeout;

      public @NonNull Builder setTimeout(@Nullable String setterArg) {
        this.timeout = setterArg;
        return this;
      }

      public @NonNull AdminPingReq build() {
        AdminPingReq pigeonReturn = new AdminPingReq();
        pigeonReturn.setTargetName(targetName);
        pigeonReturn.setTimeout(timeout);
        return pigeonReturn;
      }
    }

    @NonNull
    ArrayList<Object> toList() {
      ArrayList<Object> toListResult = new ArrayList<Object>(2);
      toListResult.add(targetName);
      toListResult.add(timeout);
      return toListResult;
    }

    static @NonNull AdminPingReq fromList(@NonNull ArrayList<Object> list) {
      AdminPingReq pigeonResult = new AdminPingReq();
      Object targetName = list.get(0);
      pigeonResult.setTargetName((String) targetName);
      Object timeout = list.get(1);
      pigeonResult.setTimeout((String) timeout);
      return pigeonResult;
    }
  }

  /** Generated class from Pigeon that represents data sent in messages. */
  public static final class AdminRebootReq {
    private @Nullable String classID;

    public @Nullable String getClassID() {
      return classID;
    }

    public void setClassID(@Nullable String setterArg) {
      this.classID = setterArg;
    }

    public static final class Builder {

      private @Nullable String classID;

      public @NonNull Builder setClassID(@Nullable String setterArg) {
        this.classID = setterArg;
        return this;
      }

      public @NonNull AdminRebootReq build() {
        AdminRebootReq pigeonReturn = new AdminRebootReq();
        pigeonReturn.setClassID(classID);
        return pigeonReturn;
      }
    }

    @NonNull
    ArrayList<Object> toList() {
      ArrayList<Object> toListResult = new ArrayList<Object>(1);
      toListResult.add(classID);
      return toListResult;
    }

    static @NonNull AdminRebootReq fromList(@NonNull ArrayList<Object> list) {
      AdminRebootReq pigeonResult = new AdminRebootReq();
      Object classID = list.get(0);
      pigeonResult.setClassID((String) classID);
      return pigeonResult;
    }
  }

  /** Generated class from Pigeon that represents data sent in messages. */
  public static final class AdminGetTerminalInfoReq {
    private @Nullable String classID;

    public @Nullable String getClassID() {
      return classID;
    }

    public void setClassID(@Nullable String setterArg) {
      this.classID = setterArg;
    }

    public static final class Builder {

      private @Nullable String classID;

      public @NonNull Builder setClassID(@Nullable String setterArg) {
        this.classID = setterArg;
        return this;
      }

      public @NonNull AdminGetTerminalInfoReq build() {
        AdminGetTerminalInfoReq pigeonReturn = new AdminGetTerminalInfoReq();
        pigeonReturn.setClassID(classID);
        return pigeonReturn;
      }
    }

    @NonNull
    ArrayList<Object> toList() {
      ArrayList<Object> toListResult = new ArrayList<Object>(1);
      toListResult.add(classID);
      return toListResult;
    }

    static @NonNull AdminGetTerminalInfoReq fromList(@NonNull ArrayList<Object> list) {
      AdminGetTerminalInfoReq pigeonResult = new AdminGetTerminalInfoReq();
      Object classID = list.get(0);
      pigeonResult.setClassID((String) classID);
      return pigeonResult;
    }
  }

  /** Generated class from Pigeon that represents data sent in messages. */
  public static final class AdminGConfigurationInfo {
    private @Nullable String name;

    public @Nullable String getName() {
      return name;
    }

    public void setName(@Nullable String setterArg) {
      this.name = setterArg;
    }

    private @Nullable String value;

    public @Nullable String getValue() {
      return value;
    }

    public void setValue(@Nullable String setterArg) {
      this.value = setterArg;
    }

    public static final class Builder {

      private @Nullable String name;

      public @NonNull Builder setName(@Nullable String setterArg) {
        this.name = setterArg;
        return this;
      }

      private @Nullable String value;

      public @NonNull Builder setValue(@Nullable String setterArg) {
        this.value = setterArg;
        return this;
      }

      public @NonNull AdminGConfigurationInfo build() {
        AdminGConfigurationInfo pigeonReturn = new AdminGConfigurationInfo();
        pigeonReturn.setName(name);
        pigeonReturn.setValue(value);
        return pigeonReturn;
      }
    }

    @NonNull
    ArrayList<Object> toList() {
      ArrayList<Object> toListResult = new ArrayList<Object>(2);
      toListResult.add(name);
      toListResult.add(value);
      return toListResult;
    }

    static @NonNull AdminGConfigurationInfo fromList(@NonNull ArrayList<Object> list) {
      AdminGConfigurationInfo pigeonResult = new AdminGConfigurationInfo();
      Object name = list.get(0);
      pigeonResult.setName((String) name);
      Object value = list.get(1);
      pigeonResult.setValue((String) value);
      return pigeonResult;
    }
  }

  /** Generated class from Pigeon that represents data sent in messages. */
  public static final class AdminGetConfigurationRsp {
    private @Nullable String responseCode;

    public @Nullable String getResponseCode() {
      return responseCode;
    }

    public void setResponseCode(@Nullable String setterArg) {
      this.responseCode = setterArg;
    }

    private @Nullable String responseMessage;

    public @Nullable String getResponseMessage() {
      return responseMessage;
    }

    public void setResponseMessage(@Nullable String setterArg) {
      this.responseMessage = setterArg;
    }

    private @Nullable List<AdminGConfigurationInfo> configurations;

    public @Nullable List<AdminGConfigurationInfo> getConfigurations() {
      return configurations;
    }

    public void setConfigurations(@Nullable List<AdminGConfigurationInfo> setterArg) {
      this.configurations = setterArg;
    }

    public static final class Builder {

      private @Nullable String responseCode;

      public @NonNull Builder setResponseCode(@Nullable String setterArg) {
        this.responseCode = setterArg;
        return this;
      }

      private @Nullable String responseMessage;

      public @NonNull Builder setResponseMessage(@Nullable String setterArg) {
        this.responseMessage = setterArg;
        return this;
      }

      private @Nullable List<AdminGConfigurationInfo> configurations;

      public @NonNull Builder setConfigurations(@Nullable List<AdminGConfigurationInfo> setterArg) {
        this.configurations = setterArg;
        return this;
      }

      public @NonNull AdminGetConfigurationRsp build() {
        AdminGetConfigurationRsp pigeonReturn = new AdminGetConfigurationRsp();
        pigeonReturn.setResponseCode(responseCode);
        pigeonReturn.setResponseMessage(responseMessage);
        pigeonReturn.setConfigurations(configurations);
        return pigeonReturn;
      }
    }

    @NonNull
    ArrayList<Object> toList() {
      ArrayList<Object> toListResult = new ArrayList<Object>(3);
      toListResult.add(responseCode);
      toListResult.add(responseMessage);
      toListResult.add(configurations);
      return toListResult;
    }

    static @NonNull AdminGetConfigurationRsp fromList(@NonNull ArrayList<Object> list) {
      AdminGetConfigurationRsp pigeonResult = new AdminGetConfigurationRsp();
      Object responseCode = list.get(0);
      pigeonResult.setResponseCode((String) responseCode);
      Object responseMessage = list.get(1);
      pigeonResult.setResponseMessage((String) responseMessage);
      Object configurations = list.get(2);
      pigeonResult.setConfigurations((List<AdminGConfigurationInfo>) configurations);
      return pigeonResult;
    }
  }

  /** Generated class from Pigeon that represents data sent in messages. */
  public static final class AdminRebootRsp {
    private @Nullable String responseCode;

    public @Nullable String getResponseCode() {
      return responseCode;
    }

    public void setResponseCode(@Nullable String setterArg) {
      this.responseCode = setterArg;
    }

    private @Nullable String responseMessage;

    public @Nullable String getResponseMessage() {
      return responseMessage;
    }

    public void setResponseMessage(@Nullable String setterArg) {
      this.responseMessage = setterArg;
    }

    public static final class Builder {

      private @Nullable String responseCode;

      public @NonNull Builder setResponseCode(@Nullable String setterArg) {
        this.responseCode = setterArg;
        return this;
      }

      private @Nullable String responseMessage;

      public @NonNull Builder setResponseMessage(@Nullable String setterArg) {
        this.responseMessage = setterArg;
        return this;
      }

      public @NonNull AdminRebootRsp build() {
        AdminRebootRsp pigeonReturn = new AdminRebootRsp();
        pigeonReturn.setResponseCode(responseCode);
        pigeonReturn.setResponseMessage(responseMessage);
        return pigeonReturn;
      }
    }

    @NonNull
    ArrayList<Object> toList() {
      ArrayList<Object> toListResult = new ArrayList<Object>(2);
      toListResult.add(responseCode);
      toListResult.add(responseMessage);
      return toListResult;
    }

    static @NonNull AdminRebootRsp fromList(@NonNull ArrayList<Object> list) {
      AdminRebootRsp pigeonResult = new AdminRebootRsp();
      Object responseCode = list.get(0);
      pigeonResult.setResponseCode((String) responseCode);
      Object responseMessage = list.get(1);
      pigeonResult.setResponseMessage((String) responseMessage);
      return pigeonResult;
    }
  }

  /** Generated class from Pigeon that represents data sent in messages. */
  public static final class AdminPingRsp {
    private @Nullable String responseCode;

    public @Nullable String getResponseCode() {
      return responseCode;
    }

    public void setResponseCode(@Nullable String setterArg) {
      this.responseCode = setterArg;
    }

    private @Nullable String responseMessage;

    public @Nullable String getResponseMessage() {
      return responseMessage;
    }

    public void setResponseMessage(@Nullable String setterArg) {
      this.responseMessage = setterArg;
    }

    private @Nullable String rtt;

    public @Nullable String getRtt() {
      return rtt;
    }

    public void setRtt(@Nullable String setterArg) {
      this.rtt = setterArg;
    }

    public static final class Builder {

      private @Nullable String responseCode;

      public @NonNull Builder setResponseCode(@Nullable String setterArg) {
        this.responseCode = setterArg;
        return this;
      }

      private @Nullable String responseMessage;

      public @NonNull Builder setResponseMessage(@Nullable String setterArg) {
        this.responseMessage = setterArg;
        return this;
      }

      private @Nullable String rtt;

      public @NonNull Builder setRtt(@Nullable String setterArg) {
        this.rtt = setterArg;
        return this;
      }

      public @NonNull AdminPingRsp build() {
        AdminPingRsp pigeonReturn = new AdminPingRsp();
        pigeonReturn.setResponseCode(responseCode);
        pigeonReturn.setResponseMessage(responseMessage);
        pigeonReturn.setRtt(rtt);
        return pigeonReturn;
      }
    }

    @NonNull
    ArrayList<Object> toList() {
      ArrayList<Object> toListResult = new ArrayList<Object>(3);
      toListResult.add(responseCode);
      toListResult.add(responseMessage);
      toListResult.add(rtt);
      return toListResult;
    }

    static @NonNull AdminPingRsp fromList(@NonNull ArrayList<Object> list) {
      AdminPingRsp pigeonResult = new AdminPingRsp();
      Object responseCode = list.get(0);
      pigeonResult.setResponseCode((String) responseCode);
      Object responseMessage = list.get(1);
      pigeonResult.setResponseMessage((String) responseMessage);
      Object rtt = list.get(2);
      pigeonResult.setRtt((String) rtt);
      return pigeonResult;
    }
  }

  /** Generated class from Pigeon that represents data sent in messages. */
  public static final class AdminResetRsp {
    private @Nullable String responseCode;

    public @Nullable String getResponseCode() {
      return responseCode;
    }

    public void setResponseCode(@Nullable String setterArg) {
      this.responseCode = setterArg;
    }

    private @Nullable String responseMessage;

    public @Nullable String getResponseMessage() {
      return responseMessage;
    }

    public void setResponseMessage(@Nullable String setterArg) {
      this.responseMessage = setterArg;
    }

    public static final class Builder {

      private @Nullable String responseCode;

      public @NonNull Builder setResponseCode(@Nullable String setterArg) {
        this.responseCode = setterArg;
        return this;
      }

      private @Nullable String responseMessage;

      public @NonNull Builder setResponseMessage(@Nullable String setterArg) {
        this.responseMessage = setterArg;
        return this;
      }

      public @NonNull AdminResetRsp build() {
        AdminResetRsp pigeonReturn = new AdminResetRsp();
        pigeonReturn.setResponseCode(responseCode);
        pigeonReturn.setResponseMessage(responseMessage);
        return pigeonReturn;
      }
    }

    @NonNull
    ArrayList<Object> toList() {
      ArrayList<Object> toListResult = new ArrayList<Object>(2);
      toListResult.add(responseCode);
      toListResult.add(responseMessage);
      return toListResult;
    }

    static @NonNull AdminResetRsp fromList(@NonNull ArrayList<Object> list) {
      AdminResetRsp pigeonResult = new AdminResetRsp();
      Object responseCode = list.get(0);
      pigeonResult.setResponseCode((String) responseCode);
      Object responseMessage = list.get(1);
      pigeonResult.setResponseMessage((String) responseMessage);
      return pigeonResult;
    }
  }

  /** Generated class from Pigeon that represents data sent in messages. */
  public static final class AdminGetTerminalInfoRsp {
    private @Nullable String responseCode;

    public @Nullable String getResponseCode() {
      return responseCode;
    }

    public void setResponseCode(@Nullable String setterArg) {
      this.responseCode = setterArg;
    }

    private @Nullable String responseMessage;

    public @Nullable String getResponseMessage() {
      return responseMessage;
    }

    public void setResponseMessage(@Nullable String setterArg) {
      this.responseMessage = setterArg;
    }

    private @Nullable String sn;

    public @Nullable String getSn() {
      return sn;
    }

    public void setSn(@Nullable String setterArg) {
      this.sn = setterArg;
    }

    private @Nullable String modelName;

    public @Nullable String getModelName() {
      return modelName;
    }

    public void setModelName(@Nullable String setterArg) {
      this.modelName = setterArg;
    }

    private @Nullable String osVersion;

    public @Nullable String getOsVersion() {
      return osVersion;
    }

    public void setOsVersion(@Nullable String setterArg) {
      this.osVersion = setterArg;
    }

    public static final class Builder {

      private @Nullable String responseCode;

      public @NonNull Builder setResponseCode(@Nullable String setterArg) {
        this.responseCode = setterArg;
        return this;
      }

      private @Nullable String responseMessage;

      public @NonNull Builder setResponseMessage(@Nullable String setterArg) {
        this.responseMessage = setterArg;
        return this;
      }

      private @Nullable String sn;

      public @NonNull Builder setSn(@Nullable String setterArg) {
        this.sn = setterArg;
        return this;
      }

      private @Nullable String modelName;

      public @NonNull Builder setModelName(@Nullable String setterArg) {
        this.modelName = setterArg;
        return this;
      }

      private @Nullable String osVersion;

      public @NonNull Builder setOsVersion(@Nullable String setterArg) {
        this.osVersion = setterArg;
        return this;
      }

      public @NonNull AdminGetTerminalInfoRsp build() {
        AdminGetTerminalInfoRsp pigeonReturn = new AdminGetTerminalInfoRsp();
        pigeonReturn.setResponseCode(responseCode);
        pigeonReturn.setResponseMessage(responseMessage);
        pigeonReturn.setSn(sn);
        pigeonReturn.setModelName(modelName);
        pigeonReturn.setOsVersion(osVersion);
        return pigeonReturn;
      }
    }

    @NonNull
    ArrayList<Object> toList() {
      ArrayList<Object> toListResult = new ArrayList<Object>(5);
      toListResult.add(responseCode);
      toListResult.add(responseMessage);
      toListResult.add(sn);
      toListResult.add(modelName);
      toListResult.add(osVersion);
      return toListResult;
    }

    static @NonNull AdminGetTerminalInfoRsp fromList(@NonNull ArrayList<Object> list) {
      AdminGetTerminalInfoRsp pigeonResult = new AdminGetTerminalInfoRsp();
      Object responseCode = list.get(0);
      pigeonResult.setResponseCode((String) responseCode);
      Object responseMessage = list.get(1);
      pigeonResult.setResponseMessage((String) responseMessage);
      Object sn = list.get(2);
      pigeonResult.setSn((String) sn);
      Object modelName = list.get(3);
      pigeonResult.setModelName((String) modelName);
      Object osVersion = list.get(4);
      pigeonResult.setOsVersion((String) osVersion);
      return pigeonResult;
    }
  }

  /** Generated class from Pigeon that represents data sent in messages. */
  public static final class AdminSetConfigurationRsp {
    private @Nullable String responseCode;

    public @Nullable String getResponseCode() {
      return responseCode;
    }

    public void setResponseCode(@Nullable String setterArg) {
      this.responseCode = setterArg;
    }

    private @Nullable String responseMessage;

    public @Nullable String getResponseMessage() {
      return responseMessage;
    }

    public void setResponseMessage(@Nullable String setterArg) {
      this.responseMessage = setterArg;
    }

    public static final class Builder {

      private @Nullable String responseCode;

      public @NonNull Builder setResponseCode(@Nullable String setterArg) {
        this.responseCode = setterArg;
        return this;
      }

      private @Nullable String responseMessage;

      public @NonNull Builder setResponseMessage(@Nullable String setterArg) {
        this.responseMessage = setterArg;
        return this;
      }

      public @NonNull AdminSetConfigurationRsp build() {
        AdminSetConfigurationRsp pigeonReturn = new AdminSetConfigurationRsp();
        pigeonReturn.setResponseCode(responseCode);
        pigeonReturn.setResponseMessage(responseMessage);
        return pigeonReturn;
      }
    }

    @NonNull
    ArrayList<Object> toList() {
      ArrayList<Object> toListResult = new ArrayList<Object>(2);
      toListResult.add(responseCode);
      toListResult.add(responseMessage);
      return toListResult;
    }

    static @NonNull AdminSetConfigurationRsp fromList(@NonNull ArrayList<Object> list) {
      AdminSetConfigurationRsp pigeonResult = new AdminSetConfigurationRsp();
      Object responseCode = list.get(0);
      pigeonResult.setResponseCode((String) responseCode);
      Object responseMessage = list.get(1);
      pigeonResult.setResponseMessage((String) responseMessage);
      return pigeonResult;
    }
  }

  /** Asynchronous error handling return type for non-nullable API method returns. */
  public interface Result<T> {
    /** Success case callback method for handling returns. */
    void success(@NonNull T result);

    /** Failure case callback method for handling errors. */
    void error(@NonNull Throwable error);
  }
  /** Asynchronous error handling return type for nullable API method returns. */
  public interface NullableResult<T> {
    /** Success case callback method for handling returns. */
    void success(@Nullable T result);

    /** Failure case callback method for handling errors. */
    void error(@NonNull Throwable error);
  }

  private static class POSLinkAdminApiCodec extends StandardMessageCodec {
    public static final POSLinkAdminApiCodec INSTANCE = new POSLinkAdminApiCodec();

    private POSLinkAdminApiCodec() {}

    @Override
    protected Object readValueOfType(byte type, @NonNull ByteBuffer buffer) {
      switch (type) {
        case (byte) 128:
          return AdminGConfigurationInfo.fromList((ArrayList<Object>) readValue(buffer));
        case (byte) 129:
          return AdminGetConfigurationReq.fromList((ArrayList<Object>) readValue(buffer));
        case (byte) 130:
          return AdminGetConfigurationRsp.fromList((ArrayList<Object>) readValue(buffer));
        case (byte) 131:
          return AdminGetTerminalInfoReq.fromList((ArrayList<Object>) readValue(buffer));
        case (byte) 132:
          return AdminGetTerminalInfoRsp.fromList((ArrayList<Object>) readValue(buffer));
        case (byte) 133:
          return AdminPingReq.fromList((ArrayList<Object>) readValue(buffer));
        case (byte) 134:
          return AdminPingRsp.fromList((ArrayList<Object>) readValue(buffer));
        case (byte) 135:
          return AdminRebootReq.fromList((ArrayList<Object>) readValue(buffer));
        case (byte) 136:
          return AdminRebootRsp.fromList((ArrayList<Object>) readValue(buffer));
        case (byte) 137:
          return AdminResetReq.fromList((ArrayList<Object>) readValue(buffer));
        case (byte) 138:
          return AdminResetRsp.fromList((ArrayList<Object>) readValue(buffer));
        case (byte) 139:
          return AdminSConfigurationInfo.fromList((ArrayList<Object>) readValue(buffer));
        case (byte) 140:
          return AdminSetConfigurationReq.fromList((ArrayList<Object>) readValue(buffer));
        case (byte) 141:
          return AdminSetConfigurationRsp.fromList((ArrayList<Object>) readValue(buffer));
        default:
          return super.readValueOfType(type, buffer);
      }
    }

    @Override
    protected void writeValue(@NonNull ByteArrayOutputStream stream, Object value) {
      if (value instanceof AdminGConfigurationInfo) {
        stream.write(128);
        writeValue(stream, ((AdminGConfigurationInfo) value).toList());
      } else if (value instanceof AdminGetConfigurationReq) {
        stream.write(129);
        writeValue(stream, ((AdminGetConfigurationReq) value).toList());
      } else if (value instanceof AdminGetConfigurationRsp) {
        stream.write(130);
        writeValue(stream, ((AdminGetConfigurationRsp) value).toList());
      } else if (value instanceof AdminGetTerminalInfoReq) {
        stream.write(131);
        writeValue(stream, ((AdminGetTerminalInfoReq) value).toList());
      } else if (value instanceof AdminGetTerminalInfoRsp) {
        stream.write(132);
        writeValue(stream, ((AdminGetTerminalInfoRsp) value).toList());
      } else if (value instanceof AdminPingReq) {
        stream.write(133);
        writeValue(stream, ((AdminPingReq) value).toList());
      } else if (value instanceof AdminPingRsp) {
        stream.write(134);
        writeValue(stream, ((AdminPingRsp) value).toList());
      } else if (value instanceof AdminRebootReq) {
        stream.write(135);
        writeValue(stream, ((AdminRebootReq) value).toList());
      } else if (value instanceof AdminRebootRsp) {
        stream.write(136);
        writeValue(stream, ((AdminRebootRsp) value).toList());
      } else if (value instanceof AdminResetReq) {
        stream.write(137);
        writeValue(stream, ((AdminResetReq) value).toList());
      } else if (value instanceof AdminResetRsp) {
        stream.write(138);
        writeValue(stream, ((AdminResetRsp) value).toList());
      } else if (value instanceof AdminSConfigurationInfo) {
        stream.write(139);
        writeValue(stream, ((AdminSConfigurationInfo) value).toList());
      } else if (value instanceof AdminSetConfigurationReq) {
        stream.write(140);
        writeValue(stream, ((AdminSetConfigurationReq) value).toList());
      } else if (value instanceof AdminSetConfigurationRsp) {
        stream.write(141);
        writeValue(stream, ((AdminSetConfigurationRsp) value).toList());
      } else {
        super.writeValue(stream, value);
      }
    }
  }

  /** Generated interface from Pigeon that represents a handler of messages from Flutter. */
  public interface POSLinkAdminApi {

    void getTerminalInfo(@NonNull AdminGetTerminalInfoReq req, @NonNull Result<AdminGetTerminalInfoRsp> result);

    void reboot(@NonNull AdminRebootReq req, @NonNull Result<AdminRebootRsp> result);

    void ping(@NonNull AdminPingReq req, @NonNull Result<AdminPingRsp> result);

    void reset(@NonNull AdminResetReq req, @NonNull Result<AdminResetRsp> result);

    void getConfiguration(@NonNull AdminGetConfigurationReq req, @NonNull Result<AdminGetConfigurationRsp> result);

    void setConfiguration(@NonNull AdminSetConfigurationReq req, @NonNull Result<AdminSetConfigurationRsp> result);

    /** The codec used by POSLinkAdminApi. */
    static @NonNull MessageCodec<Object> getCodec() {
      return POSLinkAdminApiCodec.INSTANCE;
    }
    /**Sets up an instance of `POSLinkAdminApi` to handle messages through the `binaryMessenger`. */
    static void setUp(@NonNull BinaryMessenger binaryMessenger, @Nullable POSLinkAdminApi api) {
      {
        BasicMessageChannel<Object> channel =
            new BasicMessageChannel<>(
                binaryMessenger, "dev.flutter.pigeon.poslink2.POSLinkAdminApi.getTerminalInfo", getCodec());
        if (api != null) {
          channel.setMessageHandler(
              (message, reply) -> {
                ArrayList<Object> wrapped = new ArrayList<Object>();
                ArrayList<Object> args = (ArrayList<Object>) message;
                AdminGetTerminalInfoReq reqArg = (AdminGetTerminalInfoReq) args.get(0);
                Result<AdminGetTerminalInfoRsp> resultCallback =
                    new Result<AdminGetTerminalInfoRsp>() {
                      public void success(AdminGetTerminalInfoRsp result) {
                        wrapped.add(0, result);
                        reply.reply(wrapped);
                      }

                      public void error(Throwable error) {
                        ArrayList<Object> wrappedError = wrapError(error);
                        reply.reply(wrappedError);
                      }
                    };

                api.getTerminalInfo(reqArg, resultCallback);
              });
        } else {
          channel.setMessageHandler(null);
        }
      }
      {
        BasicMessageChannel<Object> channel =
            new BasicMessageChannel<>(
                binaryMessenger, "dev.flutter.pigeon.poslink2.POSLinkAdminApi.reboot", getCodec());
        if (api != null) {
          channel.setMessageHandler(
              (message, reply) -> {
                ArrayList<Object> wrapped = new ArrayList<Object>();
                ArrayList<Object> args = (ArrayList<Object>) message;
                AdminRebootReq reqArg = (AdminRebootReq) args.get(0);
                Result<AdminRebootRsp> resultCallback =
                    new Result<AdminRebootRsp>() {
                      public void success(AdminRebootRsp result) {
                        wrapped.add(0, result);
                        reply.reply(wrapped);
                      }

                      public void error(Throwable error) {
                        ArrayList<Object> wrappedError = wrapError(error);
                        reply.reply(wrappedError);
                      }
                    };

                api.reboot(reqArg, resultCallback);
              });
        } else {
          channel.setMessageHandler(null);
        }
      }
      {
        BasicMessageChannel<Object> channel =
            new BasicMessageChannel<>(
                binaryMessenger, "dev.flutter.pigeon.poslink2.POSLinkAdminApi.ping", getCodec());
        if (api != null) {
          channel.setMessageHandler(
              (message, reply) -> {
                ArrayList<Object> wrapped = new ArrayList<Object>();
                ArrayList<Object> args = (ArrayList<Object>) message;
                AdminPingReq reqArg = (AdminPingReq) args.get(0);
                Result<AdminPingRsp> resultCallback =
                    new Result<AdminPingRsp>() {
                      public void success(AdminPingRsp result) {
                        wrapped.add(0, result);
                        reply.reply(wrapped);
                      }

                      public void error(Throwable error) {
                        ArrayList<Object> wrappedError = wrapError(error);
                        reply.reply(wrappedError);
                      }
                    };

                api.ping(reqArg, resultCallback);
              });
        } else {
          channel.setMessageHandler(null);
        }
      }
      {
        BasicMessageChannel<Object> channel =
            new BasicMessageChannel<>(
                binaryMessenger, "dev.flutter.pigeon.poslink2.POSLinkAdminApi.reset", getCodec());
        if (api != null) {
          channel.setMessageHandler(
              (message, reply) -> {
                ArrayList<Object> wrapped = new ArrayList<Object>();
                ArrayList<Object> args = (ArrayList<Object>) message;
                AdminResetReq reqArg = (AdminResetReq) args.get(0);
                Result<AdminResetRsp> resultCallback =
                    new Result<AdminResetRsp>() {
                      public void success(AdminResetRsp result) {
                        wrapped.add(0, result);
                        reply.reply(wrapped);
                      }

                      public void error(Throwable error) {
                        ArrayList<Object> wrappedError = wrapError(error);
                        reply.reply(wrappedError);
                      }
                    };

                api.reset(reqArg, resultCallback);
              });
        } else {
          channel.setMessageHandler(null);
        }
      }
      {
        BasicMessageChannel<Object> channel =
            new BasicMessageChannel<>(
                binaryMessenger, "dev.flutter.pigeon.poslink2.POSLinkAdminApi.getConfiguration", getCodec());
        if (api != null) {
          channel.setMessageHandler(
              (message, reply) -> {
                ArrayList<Object> wrapped = new ArrayList<Object>();
                ArrayList<Object> args = (ArrayList<Object>) message;
                AdminGetConfigurationReq reqArg = (AdminGetConfigurationReq) args.get(0);
                Result<AdminGetConfigurationRsp> resultCallback =
                    new Result<AdminGetConfigurationRsp>() {
                      public void success(AdminGetConfigurationRsp result) {
                        wrapped.add(0, result);
                        reply.reply(wrapped);
                      }

                      public void error(Throwable error) {
                        ArrayList<Object> wrappedError = wrapError(error);
                        reply.reply(wrappedError);
                      }
                    };

                api.getConfiguration(reqArg, resultCallback);
              });
        } else {
          channel.setMessageHandler(null);
        }
      }
      {
        BasicMessageChannel<Object> channel =
            new BasicMessageChannel<>(
                binaryMessenger, "dev.flutter.pigeon.poslink2.POSLinkAdminApi.setConfiguration", getCodec());
        if (api != null) {
          channel.setMessageHandler(
              (message, reply) -> {
                ArrayList<Object> wrapped = new ArrayList<Object>();
                ArrayList<Object> args = (ArrayList<Object>) message;
                AdminSetConfigurationReq reqArg = (AdminSetConfigurationReq) args.get(0);
                Result<AdminSetConfigurationRsp> resultCallback =
                    new Result<AdminSetConfigurationRsp>() {
                      public void success(AdminSetConfigurationRsp result) {
                        wrapped.add(0, result);
                        reply.reply(wrapped);
                      }

                      public void error(Throwable error) {
                        ArrayList<Object> wrappedError = wrapError(error);
                        reply.reply(wrappedError);
                      }
                    };

                api.setConfiguration(reqArg, resultCallback);
              });
        } else {
          channel.setMessageHandler(null);
        }
      }
    }
  }
}
